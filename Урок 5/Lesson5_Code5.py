from collections import OrderedDict, defaultdict, deque

# хотим из 10000 ip адресов забрать 3000 без локальных 192.168

N = 3000

with open('log.txt', 'r', encoding='utf-8') as f:
    log = deque(f, N)

# сохранили последние N Значений
# будем распечатывать промежуточные результаты

print(log)

# очередь ай пи адресов на конце символ перевода строк

data = OrderedDict() #здесь будем хранить нужные значения
spam = defaultdict(int) #временная

# пройдёмся по всем элементам очереди.

for item in log:
    # избавимся от перевода строки. Все символы от начала до последнего
    ip = item[:-1]
    # сохраним ай пи и отсеим локальные.
    if not ip.stratswith('192.168'):
        # если не начинается с, то сохраняем
        spam[ip] += 1
        # спам считает количество запросов по конктретному
        data[ip] = 1
        # в этот момент словарь дата сохраняет порядок айпи

print(spam)
# т.е. сейчас в дата уже есть порядок ай пи адресов. Но нет количества запросов. А в спам есть количество запросов, но нет порядка.
print(data)
# в словарь дата добавляем ключи их словаря спам.
data.update(spam)
print(data)

with open('data.txt', 'w', encoding='utf-8') as f:
    for key, value in data.items():
        f.write(f'{key} - {value}\n')